#include <afxwin.h>

void CaptureScreen(CDC* pDC, int x, int y, int width, int height, const wchar_t* outputPath) {
    // Create a compatible memory DC
    CDC memDC;
    memDC.CreateCompatibleDC(pDC);

    // Create a compatible bitmap
    CBitmap bitmap;
    bitmap.CreateCompatibleBitmap(pDC, width, height);

    // Select the bitmap into the memory DC
    CBitmap* pOldBitmap = memDC.SelectObject(&bitmap);

    // Use BitBlt to copy the portion of the screen to the bitmap
    memDC.BitBlt(0, 0, width, height, pDC, x, y, SRCCOPY);

    // Save the bitmap to a file (in BMP format for simplicity)
    CFile file;
    if (file.Open(outputPath, CFile::modeCreate | CFile::modeWrite)) {
        BITMAPFILEHEADER bmpFileHeader = {0};
        BITMAPINFOHEADER bmpInfoHeader = {0};

        // Set up the BITMAPINFOHEADER
        bmpInfoHeader.biSize = sizeof(BITMAPINFOHEADER);
        bmpInfoHeader.biWidth = width;
        bmpInfoHeader.biHeight = -height; // Negative height to ensure top-down image
        bmpInfoHeader.biPlanes = 1;
        bmpInfoHeader.biBitCount = 24; // 24 bits per pixel, adjust as needed
        bmpInfoHeader.biCompression = BI_RGB;
        bmpInfoHeader.biSizeImage = 0; // Set to 0 for uncompressed images

        // Calculate the total size of the bitmap file
        bmpFileHeader.bfType = 0x4D42; // 'BM'
        bmpFileHeader.bfSize = sizeof(BITMAPFILEHEADER) + sizeof(BITMAPINFOHEADER) + width * height * 3;
        bmpFileHeader.bfReserved1 = 0;
        bmpFileHeader.bfReserved2 = 0;
        bmpFileHeader.bfOffBits = sizeof(BITMAPFILEHEADER) + sizeof(BITMAPINFOHEADER);

        // Write the BITMAPFILEHEADER to the file
        file.Write(&bmpFileHeader, sizeof(BITMAPFILEHEADER));

        // Write the BITMAPINFOHEADER to the file
        file.Write(&bmpInfoHeader, sizeof(BITMAPINFOHEADER));

        // Get the bitmap data and write it to the file
        BYTE* pPixels = new BYTE[width * height * 3]; // 3 bytes per pixel for RGB
        GetDIBits(memDC.GetSafeHdc(), (HBITMAP)bitmap.GetSafeHandle(), 0, height, pPixels, (BITMAPINFO*)&bmpInfoHeader, DIB_RGB_COLORS);
        file.Write(pPixels, width * height * 3);

        // Cleanup
        delete[] pPixels;
        file.Close();
    }

    // Cleanup
    memDC.SelectObject(pOldBitmap); // Restore the old bitmap
    bitmap.DeleteObject();
}

// Example usage
int main() {
    // Assuming you have a CDC object, e.g., from a CView or CWnd
    CDC dc;
    dc.CreateIC(_T("DISPLAY"), NULL, NULL, NULL);

    // Capture a portion of the screen starting from (100, 100) with width 300 and height 200
    CaptureScreen(&dc, 100, 100, 300, 200, L"C:\\path\\to\\output.bmp");

    return 0;
}
